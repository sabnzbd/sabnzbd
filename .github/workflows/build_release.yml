name: Build binaries and source distribution

on: [push, pull_request]

jobs:
  build_windows:
    name: Build ${{ matrix.name }} binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-latest
            python-version: 3.9
          - name: Windows (64 bit)
            os: windows-latest
            python-version: 3.9
            python-arch: x64
          - name: Windows (32 bit)
            os: windows-latest
            python-version: 3.9
            python-arch: x86

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}
    - name: Install Python dependencies
      run: |
        python --version
        pip install --upgrade pip wheel
        pip install --upgrade -r requirements.txt
        pip install --upgrade -r builder/requirements.txt
    - name: Build source distribution
      if: runner.os == 'Windows' && matrix.python-arch == 'x64'
      run: python builder/package.py source
    - name: Upload source distribution
      if: runner.os == 'Windows' && matrix.python-arch == 'x64'
      uses: actions/upload-artifact@v2
      with:
        path: "*-src.tar.gz"
        name: Source distribution
    - name: Build Windows standalone binary and installer (64bit)
      if: runner.os == 'Windows' && matrix.python-arch == 'x64'
      run: python builder/package.py installer
    - name: Upload Windows standalone binary (64bit)
      if: runner.os == 'Windows' && matrix.python-arch == 'x64'
      uses: actions/upload-artifact@v2
      with:
        path: "*-win64-bin.zip"
        name: Windows Windows standalone binary (64bit)
    - name: Upload Windows installer (64bit)
      if: runner.os == 'Windows' && matrix.python-arch == 'x64'
      uses: actions/upload-artifact@v2
      with:
        path: "*-win-setup.exe"
        name: Windows installer
    - name: Build Windows standalone binary (32bit)
      if: runner.os == 'Windows' && matrix.python-arch == 'x86'
      run: python builder/package.py binary
    - name: Upload Windows standalone binary (32bit)
      if: runner.os == 'Windows' && matrix.python-arch == 'x86'
      uses: actions/upload-artifact@v2
      with:
        path: "*-win32-bin.zip"
        name: Windows Windows standalone binary (32bit)
    - name: Import codesign certificates
      uses: apple-actions/import-codesign-certs@v1
      if: runner.os == 'macOS' && github.event_name == 'push'
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
    - name: Build macOS binary
      if: runner.os == 'macOS'
      run: |
        python builder/package.py app
        python builder/make_dmg.py
      env:
        SIGNING_AUTH: ${{ secrets.SIGNING_AUTH }}
        NOTARIZATION_USER: ${{ secrets.NOTARIZATION_USER }}
        NOTARIZATION_PASS: ${{ secrets.NOTARIZATION_PASS }}
    - name: Upload macOS binary
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v2
      with:
        path: "*-osx.dmg"
        name: macOS binary (not notarized)



